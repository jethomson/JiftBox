; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;data_dir = data_ttgo_t_display ; global cannot be set for an environment
data_dir = data_lilygo_t_display_s3 ; global cannot be set for an environment


[env:ttgo-display]
platform = espressif32
board = ttgo-display


framework = arduino
monitor_speed = 115200

; Reopen in container
; Rebuild container
; PlatformIO will be installed automatically, but VSCode will ask to Install, ignore it.
; "PlatformIO IDE has been successfully installed!" Reload Now
; PIO Home > Platforms > Updates > Update to 6.3.2 (possibly optional)
; something happened and not my device has ACM* ports created
; it seems like it might not be necessary to share the ACM0 port with the container to upload
; USB devices should be plugged in before starting vscode. Will need to restart vscode if USB devices are unplugged.

upload_port = /dev/ttyACM0
;monitor_port = /dev/ttyACM0
;upload_protocol = esp-prog ; to upload using esp-prog. can help confirm your JTAG wiring is correct.


;build_type = debug
debug_tool = esp-prog
;esp-prog used to be /dev/ttyUSB1 and USB2 before microcontroller started using ACM0 (used to use USB0)
;debug_port = /dev/ttyUSB1 ; if this is uncommented results in: warning: unrecognized item "timeout" in "qSupported" response
debug_init_break = tbreak setup
;debug_speed = 500


lib_deps = 
	bodmer/TFT_eSPI@2.4.79
	ottowinter/ESPAsyncWebServer-esphome@^1.2.7
	
board_build.filesystem = littlefs
;board_build.partitions = no_ota.csv
;board_build.partitions = large_spiffs_16MB.csv
board_build.partitions = partitions_custom.csv

; Using ESPAsyncWebServer's default placeholder delimiter of '%' breaks a page that uses a percent sign in CSS or javascript.
; A percent sign that is not used as a delimiter can be escaped with another percent sign like so %%.
; However I wish to develop the HTML, CSS, and javascript on a PC because uploading to the microcontroller is slow.
; Loading the webpage directly on a PC will not replace %% with %, so escaping with an extra % cannot be used.
;
; I cannot find a good way to pass a define that has a value which is a single character.
; Using "-DTEMPLATE_PLACEHOLDER=\\'@\\'" compiles and works, but it causes the following error message:
;     Failed to parse ".../Documents/PlatformIO/Projects/JiftBox/.vscode/c_cpp_properties.json": Bad escaped character in JSON at position 23
; And somethings in the code will be incorrectly underlined as errors.
; As a workaround a single character string is used and the first character is taken from the string. This does not cause an error message.
;
; Picking a delimiter is difficult because you are limited to a single printable unextended ASCII character.
; All of which are already used in HTML, CSS, or javascript. Conflicts could be mitigated by putting the CSS and javascript in separate files from the HTML.
; Non-printable control characters can be used, but maintaining code with unprintable characters is inadvisable.
; I got ASCII 31 (unit separator) working as delimiter, but since unit separator appears in UTF-8 twice (with and without a glyph), using it is asking for a headache.
;
; Only $ appears to be an acceptable delimiter for replacing text in a template in HTML, CSS, and javascript.
;build_flags =
;    "-DTEMPLATE_PLACEHOLDER=\\'$\\'"


;build_unflags = '-D PLATFORMIO_DATA_DIR'

; T-Display board does not have PSRAM
build_flags = 
    '-D TEMPLATE_PLACEHOLDER="$"[0]'
    '-D GIF_BUFFER_SIZE=240' ;Optimum is >= GIF width or integral division of width
    '-D CORE_DEBUG_LEVEL=5'
    ;'-D PLATFORMIO_DATA_DIR="data_ttgo_t_display"' ; I wish the data dir could be changed like this but it does not work


extra_scripts =
    post:dist.py


[env:lilygo-t-display-s3]
platform = espressif32
board = lilygo-t-display-s3

framework = arduino
monitor_speed = 115200

upload_port = /dev/ttyACM0

debug_tool = esp-prog
debug_init_break = tbreak setup

lib_deps = 
	;bodmer/TFT_eSPI@^2.4.79
	;bodmer/TFT_eSPI@2.4.79
	bodmer/TFT_eSPI
	ottowinter/ESPAsyncWebServer-esphome@^1.2.7
	;ottowinter/ESPAsyncWebServer-esphome@1.2.7 ; does not compile for T-Display S3
	
board_build.filesystem = littlefs
board_build.partitions = partitions_custom.csv

build_flags = 
    '-D TEMPLATE_PLACEHOLDER="$"[0]'
    '-D GIF_BUFFER_SIZE=320' ;Optimum is >= GIF width or integral division of width
    '-D CORE_DEBUG_LEVEL=5'
    '-D TOUCH_MODULES_CST_SELF=1'
    ;      "memory_type": "qio_opi", qio_opi sdkconfig.h was edited by hand to comment out #define CONFIG_SPIRAM_USE_MALLOC 1 and #define CONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL 4096
    ;'-D CONFIG_SPIRAM_USE_CAPS_ALLOC=1'
    ;'-D CONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL=120000'
    ;'-D BOARD_HAS_PSRAM'
    ;'-D CONFIG_SPIRAM_SUPPORT=1'
    ;'-D CONFIG_ESP32_SPIRAM_SUPPORT=1'
    ;'-mfix-esp32-psram-cache-issue'

    ;uses dio_qspi sdkconfig.h if PSRAM build flags are not defined?
    ; platformio still dio_qspi sdkconfig.h even if PSRAM build flags are defined. i think it is just showing the wrong file.

extra_scripts =
    post:dist.py
