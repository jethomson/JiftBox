; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[env:ttgo-display]
platform = espressif32
board = ttgo-display

framework = arduino
monitor_speed = 115200
lib_deps = 
	bodmer/TFT_eSPI@^2.4.79
	ottowinter/ESPAsyncWebServer-esphome@^1.2.7
	
board_build.filesystem = littlefs
;board_build.partitions = no_ota.csv
;board_build.partitions = large_spiffs_16MB.csv
board_build.partitions = partitions_custom.csv

; Using ESPAsyncWebServer's default placeholder delimiter of '%' breaks a page that uses a percent sign in CSS or javascript.
; A percent sign that is not used as a delimiter can be escaped with another percent sign like so %%.
; However I wish to develop the HTML, CSS, and javascript on a PC because uploading to the microcontroller is slow.
; Loading the webpage directly on a PC will not replace %% with %, so escaping with an extra % cannot be used.
;
; I cannot find a good way to pass a define that has a value which is a single character.
; Using "-DTEMPLATE_PLACEHOLDER=\\'@\\'" compiles and works, but it causes the following error message:
;     Failed to parse ".../Documents/PlatformIO/Projects/JiftBox/.vscode/c_cpp_properties.json": Bad escaped character in JSON at position 23
; And somethings in the code will be incorrectly underlined as errors.
; As a workaround a single character string is used and the first character is taken from the string. This does not cause an error message.
;
; Picking a delimiter is difficult because you are limited to a single printable unextended ASCII character.
; All of which are already used in HTML, CSS, or javascript. Conflicts could be mitigated by putting the CSS and javascript in separate files from the HTML.
; Non-printable control characters can be used, but maintaining code with unprintable characters is inadvisable.
; I got ASCII 31 (unit separator) working as delimiter, but since unit separator appears in UTF-8 twice (with and without a glyph), using it is asking for a headache.
;
; Only $ appears to be an acceptable delimiter for replacing text in a template in HTML, CSS, and javascript.
;build_flags =
;    "-DTEMPLATE_PLACEHOLDER=\\'$\\'"
build_flags = 
    '-D TEMPLATE_PLACEHOLDER="$"[0]'


;build_flags = -I include

extra_scripts =
    post:dist.py
